language: cpp

compiler:
  - gcc

os: linux
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - libeigen3-dev
      - libopencv-dev
      - libopencv-core-dev
      - libgoogle-glog-dev
      - libgflags-dev
      - gcc-9
      - g++-9

# the install step will take care of deploying a newer cmake version
install:
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.18/cmake-3.18.2-Linux-x86_64.tar.gz
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.18.2-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.18.2-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}
  - export CC="gcc-9"
  - export CXX="g++-9"

before_script:
  - cd control/mpc/
  - ls
  - sudo apt install -y gfortran unzip
  - wget https://www.coin-or.org/download/source/Ipopt/Ipopt-3.12.7.zip && unzip Ipopt-3.12.7.zip && rm Ipopt-3.12.7.zip
  - ls
  - cd Ipopt-3.12.7
  - mv ../install_ipopt.sh .
  - chmod +x install_ipopt.sh
  - sudo ./install_ipopt.sh .
  - sudo apt install -y cppad
  - cd ../
  # create a build folder for the out-of-source build
  - mkdir build
  # switch to build directory
  - cd build
  # run cmake; here we assume that the project's
  # top-level CMakeLists.txt is located at '..'
  - cmake --version
  - cmake ..

script:
  - gcc -v
  - g++ -v
  # once CMake has done its job we just build using make as usual
  - make
